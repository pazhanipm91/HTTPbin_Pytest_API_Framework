{"name": "Test GET /delay/{delay} endpoint", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'None/delay/3': No scheme supplied. Perhaps you meant https://None/delay/3?", "trace": "self = <test_httpbin.TestDynamicData object at 0x0000025461985D10>\n\n    @story(\"Delayed Response\")\n    @title(\"Test GET /delay/{delay} endpoint\")\n    @retry(max_attempts=Config.RETRY_ATTEMPTS, delay_seconds=Config.RETRY_DELAY_SECONDS)\n    def test_get_delay_endpoint(self):\n        \"\"\"\n        Tests the /delay endpoint with a specified delay. This test is flaky and uses the retry decorator.\n        \"\"\"\n        delay = 3\n    \n        with step(f\"Send GET request to /delay with a {delay}s delay\"):\n            start_time = time.time()\n>           response = requests.get(f\"{BASE_URL}/delay/{delay}\")\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_httpbin.py:225: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\api.py:73: in get\n    return request(\"get\", url, params=params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\sessions.py:484: in prepare_request\n    p.prepare(\nC:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\models.py:367: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [GET]>, url = 'None/delay/3', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'None/delay/3': No scheme supplied. Perhaps you meant https://None/delay/3?\n\nC:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\models.py:438: MissingSchema"}, "description": "\nTests the /delay endpoint with a specified delay. This test is flaky and uses the retry decorator.\n", "steps": [{"name": "Send GET request to /delay with a 3s delay", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'None/delay/3': No scheme supplied. Perhaps you meant https://None/delay/3?\n", "trace": "  File \"c:\\Python\\pytest framework\\test_httpbin.py\", line 225, in test_get_delay_endpoint\n    response = requests.get(f\"{BASE_URL}/delay/{delay}\")\n  File \"C:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\api.py\", line 73, in get\n    return request(\"get\", url, params=params, **kwargs)\n  File \"C:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\sessions.py\", line 575, in request\n    prep = self.prepare_request(req)\n  File \"C:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\sessions.py\", line 484, in prepare_request\n    p.prepare(\n    ~~~~~~~~~^\n        method=request.method.upper(),\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<10 lines>...\n        hooks=merge_hooks(request.hooks, self.hooks),\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\models.py\", line 367, in prepare\n    self.prepare_url(url, params)\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n  File \"C:\\Users\\Mano\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\requests\\models.py\", line 438, in prepare_url\n    raise MissingSchema(\n    ...<2 lines>...\n    )\n"}, "start": 1757912322466, "stop": 1757912322467}], "attachments": [{"name": "log", "source": "e378b780-ade4-4b3e-908b-638cae994914-attachment.txt", "type": "text/plain"}], "start": 1757912322466, "stop": 1757912322469, "uuid": "cdae5387-6e5c-4661-8560-9f6b1434b85e", "historyId": "137bf68cea6160baef798ad4624d7c40", "testCaseId": "137bf68cea6160baef798ad4624d7c40", "fullName": "test_httpbin.TestDynamicData#test_get_delay_endpoint", "labels": [{"name": "story", "value": "Delayed Response"}, {"name": "feature", "value": "Dynamic Data & Behavior"}, {"name": "epic", "value": "HTTPBin API Testing"}, {"name": "suite", "value": "test_httpbin"}, {"name": "subSuite", "value": "TestDynamicData"}, {"name": "host", "value": "LAPTOP-496C6FE2"}, {"name": "thread", "value": "17064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_httpbin"}], "titlePath": ["test_httpbin.py", "TestDynamicData"]}